drawing하는 동안 paths 와 grid 를 관리한다.

drawing 하고 나면 paths 를 trim한고 circularPath로 만든다.

circularPath로 너비를 구한다.

cirularPath와 구한 너비는 데이터로 저장한다.

length 계산은 비용이 많이 든다.
length sin cos 값 등은 미리 계산할 필요가 없을것 같다. 
그렇치만 대부분 어느과정에서 해당 값들을 필요로 하는지 프러파일링은 필요할듯하다.


==========================
라인을 그리다가 잠깐씩 터치가 떼어진걸로 인식하는 경우가 있음.
- 터치가 떼어지더라도 상태를 변경하지 않고 새로 입력이 들어오면 계속 하는 것으로 처리할 수 있음.
- Adjustment UI 시나리오와 일관성이 없어질 수 있음.=> 드래그 하지 말고 터치 두번하게 하면 됨.  

rotation 때문에 화면이 돌아가면 메뉴 영역 때문에 이미지가 들어가지 않을 듯.
- 일단 작업하는 동안은 전체 화면으로 해야 함.
- 그림 파일 로딩해보고 어떻게 되나 결정하는 걸로..
 

=====================
아쉬운점.
어차피 시스템 UI 스레드로 다 돌릴거면 불필요하게 객체 많이 만들어서 성능 떨어뜨릴 필요 없을듯.
dp 와 px 에 대한 구분이 명확하지 않음.
rotation 처리가 여기저기 흩어져 있음. Vector 객체를 가볍게 해서,, 일관된 방식으로 좌표를 전환하는 것이 필요할듯.
화면 정보/세팅을 저장하는 별도의 클래스를 유지하는 것이 좋을듯.
- orientation, 좌표변환, 화면 크기